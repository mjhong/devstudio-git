// Don't change these comment blocks (Generated by Trustform_Convertor 1.0)

TFAssist.createTFAssist(screen);
var nbsc_data_io = TFGM.getPartModule(screen, "/cr/com/js/nbsc_data_io");
var nbsc_cucr_comm = TFGM.getPartModule(screen, "/cr/com/js/nbsc_cucr_comm");

//$(BLOCK)
function                    init() {  
	 
	
	var aaa = this.aaaaaaaaa();
	
	
        		nbsc_cucr_comm.nbmjUnionApprKeydownProc(this.input1, this.input2);
        		nbsc_cucr_comm.nbmjInitSelect();
	nbsc_cucr_comm.nbmjGetCommCode("201", "cr_com_001", false);
                    // 검사기관 목록을 가져온다.
                    nbsc_cucr_comm.nbmjGetCommCode("092", "cr-com_005", false);
                    // 검사실행부서 목록을 가져온다.
                     nbsc_cucr_comm.nbmjGetCmCommCode("61", "cr-com_006", false);
	 

	// 검사구분 목록을 가져온다.
	nbsc_cucr_comm.nbmjGetCommCode("143", "cr-com_003"); 
	/* kdy 2013.05.24 화면에 조회조건 추가*/
	nbsc_cucr_comm.nbmjGetCommCode("091", "cr-com_0031");
	nbsc_cucr_comm.nbmjGetCmCommCode("61", "cr-com_0032", true);
	
	if(gcuBranOffi == '01') TFGM.select(this.combo1, 0);
	else                    TFGM.select(this.combo1, 1);

	TFGM.select(this.combo6, 0) ; // 초기값 설정
	TFGM.select('/root/ref/audit_stdt_from', nbsc_cucr_comm.nbmjGetStdayYmd());
	TFGM.select('/root/ref/audit_stdt_to', nbsc_cucr_comm.nbmjGetYearMonthDateBeforeAfter(15)); // KDY 2017.04.07 nbmjGetTodayYmd() 에서 1개월 뒤로 변경
	TFGM.select('/root/ref/audit_stdt_from', nbsc_cucr_comm.nbmjGetStdayYmd());
	TFGM.select('/root/ref/audit_stdt_to', nbsc_cucr_comm.nbmjGetYearMonthDateBeforeAfter(15)); // KDY 2017.04.07 nbmjGetTodayYmd() 에서 1개월 뒤로 변경
	TFGM.select('/root/ref/audit_stdt_from', nbsc_cucr_comm.nbmjGetStdayYmd());
	TFGM.select('/root/ref/audit_stdt_to', nbsc_cucr_comm.nbmjGetYearMonthDateBeforeAfter(15)); // KDY 2017.04.07 nbmjGetTodayYmd() 에서 1개월 뒤로 변경
	TFGM.select('/root/ref/audit_stdt_from', nbsc_cucr_comm.nbmjGetStdayYmd());
	TFGM.select('/root/ref/audit_stdt_to', nbsc_cucr_comm.nbmjGetYearMonthDateBeforeAfter(15)); // KDY 2017.04.07 nbmjGetTodayYmd() 에서 1개월 뒤로 변경
	TFGM.select('/root/ref/audit_stdt_from', nbsc_cucr_comm.nbmjGetStdayYmd());
	TFGM.select('/root/ref/audit_stdt_to', nbsc_cucr_comm.nbmjGetYearMonthDateBeforeAfter(15)); // KDY 2017.04.07 nbmjGetTodayYmd() 에서 1개월 뒤로 변경
	TFGM.select('/root/ref/audit_stdt_from', nbsc_cucr_comm.nbmjGetStdayYmd());
	TFGM.select('/root/ref/audit_stdt_to', nbsc_cucr_comm.nbmjGetYearMonthDateBeforeAfter(15)); // KDY 2017.04.07 nbmjGetTodayYmd() 에서 1개월 뒤로 변경
}

function searchJob() {
screen.alert("나요");
}
///////////////////////////////////////////////////////////////////////////////////////////////////
//	init
///////////////////////////////////////////////////////////////////////////////////////////////////


var aaaa = function _get_sum() {
	return this.init();
}

function aaaaaaaaa() {
	return 124;
}

//(자동변환) 전역으로 정의된 함수 호출 등 코드 정리
function _start_init()
{
	this.init();
}

//$(BLOCK)

function screen_on_load()
{
	//(자동변환) 전역 함수 호출 (초기화용) 코드 삽입
	this._start_init();
}

function button1_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'button1' onclick 이벤트 코드 변환
	var vFr  = model.getValue('/root/ref/audit_stdt_from');
	var vTo = model.getValue('/root/ref/audit_stdt_to');
	if (vFr != '' && vTo != '' && !nbsc_cucr_comm.nbmjCompareDays(vFr, vTo)){
		screen.alert('시작일자는 종료일자 보다 작아야 합니다.');
		return;
	}
	nbsc_data_io.nbmjCallServer("CRINA_Ao0500N_SR");
}

function button2_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'button2' onclick 이벤트 코드 변환
	        	nbsc_cucr_comm.doExcel(this.datagrid1,false,false);
}

function button3_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

/*
	//(자동변환) 'button3' onclick 이벤트 코드 변환
	//					var rowCnt = TFGM.get_rows(datagrid1) - TFGM.get_fixedRows(datagrid1) + 1;
	//					var chkCnt = 0;
	//					var confirmCnt = 0;
	//					var audit_sec = model.getValue("/root/ref/audit_sec");
	//					var ord_no     = "";
	//					var appr_no   = "";
	//
	//					for( var i = 1 ;  i  <  rowCnt+1 ;  i++) {
	//						if(TFGM.get_textMatrix(datagrid1, i, 1) == 'true') {
	//							if(audit_sec == '') {
	//								audit_sec = TFGM.get_textMatrix(datagrid1, i, datagrid1.colRef("audit_sec"));
	//							} else {
	//								if(audit_sec !=  TFGM.get_textMatrix(datagrid1, i, datagrid1.colRef("audit_sec"))) {
	//									alert("서로다른 검사 구분이 선택되어 있습니다. 확인바랍니다");
	//									return;
	//								}
	//							}
	//							ord_no   += TFGM.get_textMatrix(datagrid1, i, 0)+"|";
	//							appr_no += TFGM.get_textMatrix(datagrid1, i, 5)+"|";
	//
	//							chkCnt++;
	//						}
	//					}
	//
	//					if(chkCnt == 0) {
	//						alert("선택된 명령이 없습니다!");
	//						return;
	//					}
	//
	//					if (window.alert('인쇄하시겠습니까?','인쇄확인',1)==2) return;
	//
	//					TFGM.crSetHidValue(screen, "param01", audit_sec);
	//					TFGM.crSetHidValue(screen, "param02", ord_no.substring(0, ord_no.length-1));
	//					TFGM.crSetHidValue(screen, "param03", appr_no.substring(0, appr_no.length-1));
	//
	//					TFGM.crOpenSubmit(screen, "Ao0100", "/cr/ina/ao/CRINA_Ao0500N_PR.jsp");
	*/
						
					if (TFGM.get_rows(this.datagrid1)-TFGM.get_fixedRows(this.datagrid1)<1){
					screen.alert('인쇄할 데이터가 없습니다.');
					return;
					}
					var vPam = 'fr_dt='+ model.getValue('/root/ref/audit_stdt_from');
					vPam += '&to_dt='+ model.getValue('/root/ref/audit_stdt_to');
					params = 'init_mode=view';
					TFGM.popAIReport(screen, 'http:'+ TFGM.getLocationHost(screen) +'/cr/ina/ao/CRINA_Ao0500N_PR01.jsp?'+ vPam, params);
}

function button4_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'button4' onclick 이벤트 코드 변환
	window.close();
}

function combo1_on_itemchange(objInst, nprev_item, ncur_item)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'combo1' xforms-select 이벤트 코드 변환
	nbsc_cucr_comm.nbmjUnionSecSelect(this.combo1,this.combo2,this.combo3);
}

function button5_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'button5' onclick 이벤트 코드 변환
	        nbsc_cucr_comm.nbmjGetUnionApprNo('/root/ref');
}

function input3_btn_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	TFGM.showCalendar(this.input3);
}

function input4_btn_on_mouseup(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	TFGM.showCalendar(this.input4);
}

function datagrid1_on_itemdblclick(objInst, nDblClickRow, nDblClickColumn)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'datagrid1' ondblclick 이벤트 코드 변환
	if(TFGM.isCell(this.datagrid1, event.get_target()) && TFGM.get_mouseRow(this.datagrid1) >= TFGM.get_fixedRows(this.datagrid1) && TFGM.get_valueMatrix(this.datagrid1, TFGM.get_row(this.datagrid1), TFGM.get_colRef(this.datagrid1, "ord_desi_sec")) != "00"){
		model.setValue('/root/link/ord_no', model.getValue("/root/res/CRINA_Ao0500N_SR/recordset/record["+(TFGM.get_row(this.datagrid1)-TFGM.get_fixedRows(this.datagrid1)+1)+"]/ord_no"));
		model.setValue('/root/link/appr_no', model.getValue("/root/res/CRINA_Ao0100_SR/recordset/record["+(TFGM.get_row(this.datagrid1)-TFGM.get_fixedRows(this.datagrid1)+1)+"]/appr_no"));
		model.setValue('/root/link/union_nm', model.getValue("/root/res/CRINA_Ao0100_SR/recordset/record["+(TFGM.get_row(this.datagrid1)-TFGM.get_fixedRows(this.datagrid1)+1)+"]/union_nm"));
		model.refresh();
		window.load("CRINA_Ao0200N_SC.xrw", "modal", "CRINA_Ao0200N_SC", "width:1000px; height:720;", "/root/link", "/root/link");
	} 
}

function combo6_on_valuechanged(objInst)
{
	TFAssist.XEVENT(arguments.callee);

	//(자동변환) 'combo6' xforms-value-changed 이벤트 코드 변환
	var vDept_CD = model.getValue('/root/ref/dept_cd');
}